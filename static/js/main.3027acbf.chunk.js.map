{"version":3,"sources":["components/pages/Splash.js","components/wizard/ProgressItem.js","components/wizard/ProgressBar.js","components/Button.js","components/wizard/ActiveStepContainer.js","components/wizard/Wizard.js","components/Header.js","components/wizard/steps/TotalSongs.js","components/pill-select/PillSelectOption.js","components/pill-select/PillSelect.js","components/wizard/steps/SetGenre.js","components/wizard/steps/SetVibe.js","components/wizard/steps/AddArtists.js","components/LinkSpotifyButton.js","components/wizard/steps/LinkSpotify.js","components/wizard/steps/GenerateNewPlaylist.js","components/ModelViewer.js","components/pages/New.js","components/pages/NoMatch.js","components/pages/About.js","App.js","index.js"],"names":["Splash","to","ProgressItem","props","title","ProgressBar","items","map","i","ix","key","icon","Button","onClick","handleClick","ActiveStepContainer","ActiveStep","step","index","max","handleValueChange","formValues","handleBack","handleNext","handleReset","inspector","Wizard","state","activeIndex","event","eventName","target","name","eventValue","value","type","setState","prevState","children","length","this","numItems","activeItem","React","Component","Header","href","rel","TotalSongs","min","placeholder","onChange","PillSelectOption","selected","disabled","PillSelect","options","multi","handleChange","newValue","includes","filter","v","concat","bubbleChange","isDisabled","reset","o","label","SetGenre","SetVibe","AddArtists","LinkSpotifyButton","GenerateNewPlaylist","ModelViewer","model","New","skippable","LinkSpotify","NoMatch","About","App","basename","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3027acbf.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default function Splash() {\n    return (\n        <main>\n            <h2>\n                Generate free Spotify playlists magically\n            </h2>\n            <p>\n                A quest! The wizard is creating a musical potion in his cauldron.\n                Help him out by adding some ingredients to the mix from scratch,\n                or use the scrying orb to pluck them from your past...\n            </p>\n            {/* <Link to=\"/rewind\">Monthly Rewind</Link> */}\n            <Link to=\"/new\">\n                Create New\n            </Link>\n        </main>\n    )\n}","import React from 'react'\n\nexport default function ProgressItem(props) {\n    return (\n        <h3>\n            { props.title }\n        </h3>\n    )\n}","import React, { Fragment } from 'react'\nimport ProgressItem from './ProgressItem'\n\nexport default function ProgressBar(props) {\n    return (\n        <Fragment>\n            {\n                props.items.map((i, ix) => <ProgressItem key={ix} title={ i.title } icon={ i.icon } />)\n            }\n        </Fragment>\n    )\n}","import React from 'react'\n\nexport default function Button(props) {\n    return (\n        <button onClick={ props.handleClick }>\n            { props.title }\n        </button>\n    )\n}","import React from 'react'\nimport Button from '../Button'\n\nexport default function ActiveStepContainer(props) {\n    const ActiveStep = props.step\n\n    return (\n        <div>\n            <div>\n                <h3>\n                    Step { props.index + 1 } / { props.max }\n                </h3>\n                <ActiveStep handleValueChange={ props.handleValueChange } formValues={ props.formValues } />\n                { props.index > 0 && <Button title=\"Back\" handleClick={ props.handleBack } /> }\n                { props.index < props.max - 1 && <Button title=\"Next\" handleClick={ props.handleNext } /> }\n                { props.index === props.max - 1 && <Button title=\"Reset\" handleClick={ props.handleReset } />}\n            </div>\n            <div>\n                { props.inspector }\n            </div>\n        </div>\n    )\n}","import React from 'react'\nimport ProgressBar from './ProgressBar'\nimport ActiveStepContainer from './ActiveStepContainer'\n\nexport default class Wizard extends React.Component {\n    \n    state = {\n        activeIndex: this.props.activeIndex,\n        formValues: {}\n    }\n\n    handleValueChange = (event) => {\n        const eventName = event.target.name\n        let eventValue = event.target.value\n        const eventType = event.target.type\n\n        if (eventType === 'number') {\n            eventValue = +eventValue\n        }\n\n        this.setState(prevState => {\n            return {\n                formValues: {\n                    ...prevState.formValues,\n                    [eventName]: eventValue\n                }\n            }\n        })\n    }\n\n    handleNext = () => {\n        this.setState(prevState => {\n            if (prevState.activeIndex !== this.props.children.length - 1) {\n                return { \n                    activeIndex: prevState.activeIndex + 1\n                } \n            }\n        })\n    }\n\n    handleBack = () => {\n        this.setState(prevState => {\n            if (prevState.activeIndex !== 0) {\n                return { \n                    activeIndex: prevState.activeIndex - 1\n                } \n            }\n        })\n    }\n\n    handleReset = () => {\n        this.setState({\n            activeIndex: 0,\n            formValues: {}\n        })\n    }\n\n    render() {\n        const activeIndex = this.state.activeIndex\n        const numItems = this.props.children.length\n        const activeItem = this.props.children[activeIndex]\n\n        return(\n            <div>\n                <ProgressBar items={ this.props.children }/>\n                <ActiveStepContainer\n                    index={ activeIndex }\n                    max={ numItems }\n                    step={ activeItem.step }\n                    inspector={ activeItem.inspector }\n                    handleNext={ this.handleNext }\n                    handleBack={ this.handleBack } \n                    handleReset={ this.handleReset }\n                    handleValueChange={ this.handleValueChange }\n                    formValues={ this.state.formValues }\n                    />\n            </div>\n        )\n    }\n}","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nexport default function Header(props) {\n    return (\n        <header>\n            <h1>\n                { props.title }\n            </h1>\n            <nav>\n                <NavLink to=\"/about\">\n                    <div>\n                    About\n                    </div>\n                </NavLink>\n                <a href=\"https://ko-fi.com/joshmarcushills\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    Donate\n                </a>\n            </nav>\n        </header>\n    )\n}","import React, { Fragment } from 'react'\n\nexport default function TotalSongs(props) {\n    return (\n        <Fragment>\n            <p>\n                <em>\n                    The wizard squints at you expectantly, holding a\n                    clattering armful of empty glass vials...\n                </em>\n            </p>\n            <p>\n                Choose the total number of songs you'd like in your\n                playlist\n            </p>\n            <input\n                name=\"total-songs\"\n                min=\"5\"\n                max=\"100\"\n                type=\"number\"\n                placeholder=\"31\"\n                value={ props.formValues['total-songs']}\n                onChange={ props.handleValueChange } />\n        </Fragment>\n    )\n}","import React from 'react'\n\nexport default function PillSelectOption(props) {\n    return (\n        <button onClick={ () => props.handleClick(props.value) }>\n            { props.children } { props.selected && '*'} { props.disabled() && '-'}\n        </button>\n    )\n}","import React from 'react'\nimport PillSelectOption from './PillSelectOption'\n\nexport default class PillSelect extends React.Component {\n    \n    state = {\n        title: this.props.title,\n        options: this.props.children.options,\n        multi: this.props.multi,\n        name: this.props.name,\n        max: this.props.max,\n        handleChange: this.props.handleChange,\n        value: null\n    }\n\n    handleClick = (value) => {\n        let newValue\n\n        if (this.state.multi) {\n            if (this.state.value === null) {\n                if (this.state.max === 0) {\n                    newValue = null\n                } else {\n                    newValue = [value]\n                }\n            } else if (this.state.value.includes(value)) {\n                newValue = this.state.value.filter(v => v !== value)\n                if (newValue.length === 0) {\n                    newValue = null\n                }\n            } else {\n                if (this.state.max && this.state.value.length === this.state.max) {\n                    return\n                } else {\n                    newValue = this.state.value.concat(value)\n                }\n            }\n        } else {\n            if (value === this.state.value) {\n                newValue = null\n            } else {\n                newValue = value\n            }\n        }\n\n        this.setState({\n            value: newValue\n        }, this.bubbleChange)\n    }\n\n    isDisabled = (value) => {\n        if (this.state.multi && this.state.max) {\n            if (this.state.max === 0) {\n                return true\n            }\n\n            return this.state.value && !this.state.value.includes(value) && this.state.value.length === this.state.max\n        } else {\n            return false\n        }\n    }\n\n    reset = () => {\n        this.setState({\n            value: null\n        }, this.bubbleChange)\n    }\n\n    bubbleChange = () => {\n        this.state.handleChange({\n            target: {\n                name: this.state.name,\n                value: this.state.value\n            }\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <div>\n                    <p>\n                        { this.state.title && this.state.title }\n                    </p>\n                    <p>\n                        { (this.state.multi && this.state.value && this.state.value.length) || '0' }\n                        { this.state.max && `/ ${this.state.max}`}\n                        { this.state.multi && this.state.value !== null && <button onClick={ this.reset }>X</button> }\n                    </p>\n                </div>\n                \n                { this.state.options.map(\n                    o =>\n                        <PillSelectOption\n                            key={ o.value }\n                            value={ o.value }\n                            selected={ this.state.value && (this.state.value === o.value || this.state.value.includes(o.value)) }\n                            handleClick={ this.handleClick }\n                            disabled={ () => this.isDisabled(o.value) }>\n                            { o.label }\n                        </PillSelectOption>)\n                }\n            </div>\n        )\n    }\n}","import React, { Fragment } from 'react'\nimport PillSelect from '../../pill-select/PillSelect'\n\nexport default function SetGenre(props) {\n    return (\n        <Fragment>\n            <p>\n                <em>\n                    The wizard invites you to join a ceremonial dance.\n                </em>\n            </p>\n            <PillSelect\n                title=\"Choose up to two genres...\"\n                name=\"genres\"\n                multi={ true }\n                max={ 2 }\n                handleChange={ props.handleValueChange }>\n                {{\n                    options: [\n                        {\n                            value: 0,\n                            label: 'Rock'\n                        },\n                        {\n                            value: 1,\n                            label: 'Rap'\n                        },\n                        {\n                            value: 2,\n                            label: 'Pop'\n                        }\n                    ]\n                }}\n            </PillSelect>\n        </Fragment>\n    )\n}","import React, { Fragment } from 'react'\nimport PillSelect from '../../pill-select/PillSelect'\n\nexport default function SetVibe(props) {\n    return (\n        <Fragment>\n            <p>\n                <em>\n                    The wizard examines his spice rack.\n                </em>\n            </p>\n            <p>\n                Create a vibe...\n            </p>\n            <PillSelect name=\"vibes\" multi=\"true\" handleChange={ props.handleValueChange }>\n                {{\n                    options: [\n                        {\n                            value: 0,\n                            label: 'Digital'\n                        },\n                        {\n                            value: 1,\n                            label: 'Acoustic'\n                        },\n                        {\n                            value: 2,\n                            label: 'Short'\n                        }\n                    ]\n                }}\n            </PillSelect>\n        </Fragment>\n    )\n}","import React, { Fragment } from 'react'\n\nexport default function AddArtists() {\n    return (\n        <Fragment>\n            <p>\n                <em>\n                    The wizard holds a lock of hair above the bubbling mixture.\n                </em>\n            </p>\n            <p>\n                Add some artists?\n            </p>\n        </Fragment>\n    )\n}","import React from 'react'\n\nexport default function LinkSpotifyButton() {\n    return (\n        <button>\n            Link Spotify\n        </button>\n    )\n}","import React, { Fragment } from 'react'\nimport LinkSpotifyButton from '../../LinkSpotifyButton'\n\nexport default function TotalSongs() {\n    return (\n        <Fragment>\n            <p>\n                <em>\n                    The wizard holds up a mirror which reflects your younger self.\n                </em>\n            </p>\n            <p>\n                Optionally link your Spotify to influence the resultant\n                playlist with your listening history\n            </p>\n            <LinkSpotifyButton />\n        </Fragment>\n    )\n}","import React, { Fragment } from 'react'\nimport LinkSpotifyButton from '../../LinkSpotifyButton'\n\nexport default function GenerateNewPlaylist() {\n    return (\n        <Fragment>\n            <p>\n                <em>\n                    The wizard mumbles an incantation, and a breeze picks up about you.\n                    With a sudden flash, it's ready! \n                </em>\n            </p>\n            <p>\n                Add your playlist to your Spotify library to listen to it\n            </p>\n            <LinkSpotifyButton />\n        </Fragment>\n    )\n}","import React from 'react'\n\nexport default function ModelViewer(props) {\n    return (\n        <p>\n            Model: { props.model }\n        </p>\n    )\n}","import React, { Fragment } from 'react'\nimport Wizard from '../wizard/Wizard'\nimport Header from '../Header'\nimport TotalSongs from '../wizard/steps/TotalSongs'\nimport SetGenre from '../wizard/steps/SetGenre'\nimport SetVibe from '../wizard/steps/SetVibe'\nimport AddArtists from '../wizard/steps/AddArtists'\nimport LinkSpotify from '../wizard/steps/LinkSpotify'\nimport GenerateNewPlaylist from '../wizard/steps/GenerateNewPlaylist'\nimport ModelViewer from '../ModelViewer'\n\nexport default function New() {\n    return (\n        <Fragment>\n            <Header title=\"PW - Create New\" />\n            <main>\n                <Wizard activeIndex={ 0 }>\n                    {\n                        [\n                            {\n                                title: 'Total Songs',\n                                icon: '',\n                                step: TotalSongs,\n                                inspector: <ModelViewer model=\"potions\"/>,\n                                skippable: false\n                            },\n                            {\n                                title: 'Set Genre',\n                                icon: '',\n                                step: SetGenre,\n                                inspector: <ModelViewer model=\"shoes\"/>,\n                                skippable: false\n                            },\n                            {\n                                title: 'Set Vibe',\n                                icon: '',\n                                step: SetVibe,\n                                inspector: <ModelViewer model=\"spices\"/>,\n                                skippable: false\n                            },\n                            {\n                                title: 'Add Artists',\n                                icon: '',\n                                step: AddArtists,\n                                inspector: <ModelViewer model=\"scissors\"/>,\n                                skippable: false\n                            },\n                            {\n                                title: 'Link Spotify',\n                                icon: '',\n                                step: LinkSpotify,\n                                inspector: <ModelViewer model=\"mirror\"/>,\n                                skippable: false\n                            },\n                            {\n                                title: 'Create Mix',\n                                icon: '',\n                                step: GenerateNewPlaylist,\n                                inspector: <ModelViewer model=\"shazam\"/>,\n                                skippable: false\n                            }\n                        ]\n                    }\n                </Wizard>\n            </main>\n        </Fragment>\n    )\n}","import React from 'react'\n\nexport default function NoMatch() {\n    return (\n        <p>\n            Not found\n        </p>\n    )\n}","import React from 'react'\n\nexport default function About() {    \n    return (\n        <p>\n            About\n        </p>\n    )\n}","import React from 'react'\nimport {\n    HashRouter as Router,\n    Switch,\n    Route\n} from 'react-router-dom'\n\nimport Splash from './components/pages/Splash'\nimport Wizard from './components/pages/New'\nimport NoMatch from './components/pages/NoMatch'\nimport About from './components/pages/About'\n\nexport default function App() {\n    return (\n        <Router basename=\"/\">\n            <Switch>\n                <Route exact path=\"/\">\n                    <Splash />\n                </Route>\n                <Route path=\"/new\">\n                    <Wizard />\n                </Route>\n                <Route path=\"/about\">\n                    <About />\n                </Route>\n                <Route path=\"*\">\n                    <NoMatch />\n                </Route>\n            </Switch>\n        </Router>\n    )\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App.js'\n\nimport './style.css'\n\nReactDOM.render(\n    <App />, document.getElementById('root')\n)"],"sourceRoot":""}